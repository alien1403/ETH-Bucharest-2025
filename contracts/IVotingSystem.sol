/**
 * This file was automatically generated by Stylus and represents a Rust program.
 * For more information, please see [The Stylus SDK](https://github.com/OffchainLabs/stylus-sdk-rs).
 */

// SPDX-License-Identifier: MIT-OR-APACHE-2.0
pragma solidity ^0.8.23;

interface IVotingSystem  {
    function createCampaign(string calldata description, uint256 start_time, uint256 end_time, uint8 option_count, uint8[] memory public_key) external returns (uint256);

    function vote(uint8[] memory encrypted_vote, uint256 campaign_id) external;

    function tallyVotes(uint256 campaign_id) external;

    function getCampaignOwner(uint256 campaign_id) external view returns (address);

    function getCampaignDescription(uint256 campaign_id) external view returns (string memory);

    function getCampaignStartTime(uint256 campaign_id) external view returns (uint256);

    function getCampaignEndTime(uint256 campaign_id) external view returns (uint256);

    function getCampaignOptionCount(uint256 campaign_id) external view returns (uint8);

    function getCampaignPublicKey(uint256 campaign_id) external view returns (uint8[] memory);

    function isCampaignTallied(uint256 campaign_id) external view returns (bool);
}
